<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eomcs.pms.dao.ReviewDao">

    <resultMap type="Review" id="ReviewMap">
    <id column="review_no" property="no"/> 
    <result column="product_no" property="productNo"/>
    <result column="score" property="score"/>
    <result column="comment" property="comment"/>
    <result column="registeredDate" property="registeredDate"/>
    
    <association property="member" javaType="member">
      <id column="member_no" property="number"/>
      <result column="id" property="id"/>
    </association>
    
  </resultMap>
  
  
  <select id="findAll" resultMap="ReviewMap">
    select 
      r.review_no, 
      pro.product_no, 
      m.id, 
      r.score, 
      r.comment, 
      r.registeredDate 
    from 
      review r join product pro on r.product_no = pro.product_no join member m on r.member_no = m.member_no 
    where 
      pro.product_no = #{productNo}
  </select>
  
  <insert id="insert" parameterType="review">
    insert into review(product_no, member_no, score, comment)
      values(#{productNo},#{member.number},#{score},#{comment})
  </insert>
  
  <select id="reviewIs" resultMap="ReviewMap">
  select 
     r.review_no, 
     pro.product_no, 
     m.id, 
     r.score, 
     r.comment, 
     r.registeredDate 
   from 
     review r join product pro on r.product_no = pro.product_no join member m on r.member_no = m.member_no 
   where 
     pro.product_no = #{productNo}
   and
     m.id = #{id};
  

  </select>
  
  
  <!-- 
    @Override
  public boolean reviewIs(int productNumber, String id) throws Exception {
    //    Product product = findByNo(productNumber);
    //
    //    for (Review review : product.getReviewList()) {
    //      if (review.getId().equals(id)) {
    //        return false;
    //      }
    //    }
    return true;
  }
  
  
  <select id="findByNo" resultMap="BoardMap" parameterType="int">
       select
         b.board_no,
         b.title,
         b.content,
         b.registeredDate,
         b.views,
         m.member_no, 
         m.id, 
         m.name,
         m.email
       from board b inner join member m 
         on b.member_no=m.member_no
        where board_no=#{no}
  </select>
  
  <update id="update" parameterType="board">
  update board set
    title=#{title},
    content=#{content}
    where 
    board_no=#{boardNumber}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from board 
    where board_no=#{no}
  </delete>
  -->
</mapper>







