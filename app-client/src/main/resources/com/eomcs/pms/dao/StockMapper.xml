<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StockMapper">
  
  <resultMap type="Stock" id="StockMap">
    <id column="stock_no" property="stockNumber"/>
    <result column="amount" property="stocks"/>
    <result column="price" property="price"/>

    <association property="product" javaType="Product">
      <id column="product_no" property="productNumber"/>
      <result column="name" property="productName"/>
      <result column="origin" property="countryOrigin"/>
      <result column="volume" property="volume"/>
      <result column="alcoholLevel" property="alcoholLevel"/>
      <result column="sugarLevel" property="sugarLevel"/>
      <result column="acidity" property="acidity"/>
      <result column="weight" property="weight"/>
      <result column="variety" property="variety"/>
      <result column="rate" property="rate"/>
    </association>
  </resultMap>
    
  <resultMap type="Product" id="ProductMap">
      <id column="product_no" property="productNumber"/>
      <result column="name" property="productName"/>
      <result column="origin" property="countryOrigin"/>
      <result column="volume" property="volume"/>
      <result column="alcoholLevel" property="alcoholLevel"/>
      <result column="sugarLevel" property="sugarLevel"/>
      <result column="acidity" property="acidity"/>
      <result column="weight" property="weight"/>
      <result column="variety" property="variety"/>
      <result column="rate" property="rate"/>
  </resultMap>
  
  <select id="findAll" resultMap="StockMap" parameterType="string">
    Select
      s.stock_no,
      p.name,
      s.price,
      s.amount
    From 
      stock s left outer join product p
      on s.product_no = p.product_no 
    where 
      member_no=(select member_no from member where id=#{id})
    order by 
      s.product_no asc
  </select>
  
  <insert id="insert" parameterType="stock">
    insert 
      into stock(stock_no,member_no,product_no,amount,price) 
    values(#{stockNumber},#{(select member_no from member where id=member.id)},#{product.productNumber},#{stocks},#{price})
  </insert>
  
<!--   <select id="checkProduct" resultMap="StockMap" parameterType="string">
    select
      p.product_no, 
      p.type_no, 
      p.name, 
      p.origin, 
      p.volume, 
      p.alcoholLevel, 
      p.sugarLevel,
      p.acidity, 
      p.weight, 
      p.rate, 
      p.variety,
      t.type, 
      t.subType
    from product p 
      join product_type t on p.type_no=t.type_no
    where 
      p.name=#{name}
  </select>
    
  <select id="findByNameId" resultMap="StockMap" parameterType="map">
    Select 
      s.stock_no, 
      p.name, 
      s.price, 
      s.amount
    From 
      stock s left outer join product p on s.product_no = p.product_no 
    where 
      p.name=#{productName} and member_no=(select member_no from member where id=#{id})
    order by s.product_no asc
  </select>
  
  <update id="update" parameterType="stock">
    update stock set amount=#{stocks},price=#{price} where stock_no=#{no}
  </update>
  
  
  <delete id="delete" parameterType="stock">
    delete from stock where stock_no=#{no}
  </delete> -->

</mapper>







