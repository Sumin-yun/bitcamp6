<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eomcs.pms.dao.StockDao">
  
  <resultMap type="Stock" id="StockMap">
    <id column="stock_no" property="stockNumber"/>
    <result column="amount" property="stocks"/>
    <result column="price" property="price"/>

    <association property="product" javaType="Product">
      <id column="product_no" property="productNumber"/> 
      <result column="type_no" property="typeNumber"/>
      <result column="name" property="productName"/>
      <result column="origin" property="countryOrigin"/>
      <result column="volume" property="volume"/>
      <result column="variety" property="variety"/>
      <result column="alcoholLevel" property="alcoholLevel"/>
      <result column="sugarLevel" property="sugarLevel"/> 
      <result column="acidity" property="acidity"/>
      <result column="weight" property="weight"/>
      <result column="rate" property="rate"/>
      <result column="reviewerNum" property="reviewerNum"/>
    </association>
    
    <association property="seller" javaType="Seller">
      <result column="business_name" property="businessName"/>
      <result column="business_no" property="businessNumber"/>
      <result column="business_address" property="businessAddress"/>
      <result column="business_tel" property="businessPlaceNumber"/>
      <result column="openingTime" property="businessOpeningTime"/>
      <result column="closingTime" property="businessClosingTime"/>
  
      <association property="member" javaType="member">
        <id column="member_no" property="number"/>
        <result column="id" property="id"/>
        <result column="name" property="name"/>
      </association>
    </association>
  </resultMap>
  
  <select id="findByProductNo" resultMap="StockMap" parameterType="int">
    select 
      p.product_no, p.name, 
      m.member_no, m.id, m.name,
      s.stock_no,s.price,s.amount, 
      sl.business_name, sl.business_no, sl.business_address, sl.business_address, sl.business_tel, sl.openingTime, sl.closingTime 
    from product p join stock s on p.product_no=s.product_no 
      join member m on s.member_no=m.member_no 
      join seller sl on m.member_no=sl.member_no 
    where 
      p.product_no=#{productNo};
  </select>
  
  <select id="findAll" resultMap="StockMap" parameterType="string">
    Select
      p.product_no,
      s.stock_no,
      p.name,
      s.price,
      s.amount
    From 
      stock s left outer join product p
      on s.product_no = p.product_no 
    where 
      member_no=(select member_no from member where id=#{id})
    order by 
      s.product_no asc
  </select>
  
  <insert id="insert" parameterType="stock">
    insert 
      into stock(member_no,product_no,amount,price) 
    values((select member_no from member where id=#{seller.member.id}),#{product.productNumber},#{stocks},#{price})
  </insert>
  
  <select id="checkProduct" resultMap="StockMap" parameterType="string">
    select
      p.product_no,
      p.type_no,
      p.name,
      p.origin,
      p.volume,
      p.alcoholLevel,
      p.sugarLevel,
      p.acidity,
      p.weight,
      p.rate,
      p.variety,
      t.type, 
      t.subType
    from product p 
      join product_type t on p.type_no=t.type_no
    where 
      p.name=#{name}
  </select>
    
  <select id="findByNameId" resultMap="StockMap" parameterType="map">
    Select 
      s.stock_no, 
      p.name, 
      s.price, 
      s.amount
    From 
      stock s left outer join product p on s.product_no = p.product_no 
    where 
      p.name=#{name} and member_no=(select member_no from member where id=#{id})
    order by s.product_no asc
  </select>
  
  <update id="update" parameterType="stock">
    update stock set amount=#{stocks},price=#{price} where stock_no=#{stockNumber}
  </update>
  
  <delete id="delete" parameterType="stock">
    delete from stock where stock_no=#{stockNumber}
  </delete>

  <select id="findBySeller" resultMap="StockMap" parameterType="int">
    select 
      s.stock_no,
      p.product_no,
      p.name,
      se.business_name,
      Se.business_address,
      s.price, 
      s.amount
    from 
      stock s left outer join product p on s.product_no = p.product_no 
      left outer join  member m on  m.member_no = s.member_no
      Left outer join seller se on se.member_no = m.member_no
    where 
      p.product_no=#{no}
    order by s.product_no asc;
    </select>

</mapper>







