<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eomcs.pms.dao.CartDao">
  
  <resultMap type="Cart" id="CartMap">
    <id column="cart_no" property="cartNumber"/> 
    <result column="buyerId" property="id"/> <!-- 구매자 id -->
    <result column="amount" property="cartStocks"/>
    <result column="registeredDate" property="registeredDate"/>
    
   <association property="stock" javaType="Stock">
    <id column="stock_no" property="stockNumber"/>
    <result column="sellerId" property="id"/> <!-- 판매자 id -->
    <result column="amount" property="stocks"/>
    <result column="price" property="price"/>
    <!-- stock 안에 product 객체정보를 넣어야한다면? -->
    
    <association property="product" javaType="Product">
      <id column="product_no" property="productNumber"/>
      <result column="name" property="productName"/> 
    </association>
  </association> 

  </resultMap>
   
  <select id="findAll" resultMap="CartMap">
    select 
      c.cart_no, c.member_no buyerNo, c.stock_no, c.amount, c.registeredDate, 
      s.stock_no, s.member_no sellerNo, s.price,
      p.product_no, p.name,
      m1.id as buyerId, 
      m2.id as sellerId 
    from 
      cart c join stock s on c.stock_no=s.stock_no 
      join member m1 on m1.member_no=c.member_no 
      join product p on s.product_no = p.product_no
      join member m2 on m2.member_no=s.member_no 
    where 
      m1.id=#{id}
  </select>
  
  <!--
  
   <insert id="insert" parameterType="product">
   insert into product(type_no, name, variety, origin, volume, alcoholLevel, sugarLevel, acidity, weight)
    values(#{productType.number}, #{productName}, #{variety}, #{countryOrigin}, #{volume}, #{alcoholLevel}, #{sugarLevel}, #{acidity}, #{weight}) 
  </insert>
   
  <select id="findByNo" resultMap="ProductMap" parameterType="int">
    select 
      p.product_no, 
      p.type_no, 
      p.name, 
      p.origin, 
      p.volume, 
      p.alcoholLevel, 
      p.sugarLevel, 
      p.acidity, 
      p.weight, 
      p.rate, 
      p.variety, 
      t.type, 
      t.subType 
    from product p join product_type t on p.type_no=t.type_no 
    where 
      p.product_no=#{no}
  </select>
  
    <select id="findByProduct" resultMap="ProductMap" parameterType="String">
    select 
      p.product_no, 
      p.type_no, 
      p.name, 
      p.origin, 
      p.volume, 
      p.alcoholLevel, 
      p.sugarLevel, 
      p.acidity, 
      p.weight, 
      p.rate, 
      p.variety, 
      t.type, 
      t.subType 
    from product p join product_type t on p.type_no=t.type_no 
    where 
      p.name=#{name}
  </select>
  
  <update id="update" parameterType="Product">
    update product set 
      type_no = #{productType.number}, 
      name = #{productName}, 
      origin=#{countryOrigin}, 
      volume=#{volume}, 
      alcoholLevel=#{alcoholLevel}, 
      sugarLevel=#{sugarLevel}, 
      acidity=#{acidity}, 
      weight=#{weight}, 
      variety=#{variety}
    where 
      product_no=#{productNumber}
  </update>
  
  <delete id="delete" parameterType="Product">
    delete from product 
    where product_no=#{productNumber}
  </delete>
  -->
</mapper>







